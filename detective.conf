# --- Detective Tool Configuration ---
# This file controls the behavior of the ROM analysis script.

# --- General Settings ---

# Set to "true" to automatically delete temporary folders (like decompiled APKs).
# Set to "false" to keep them for manual inspection.
CLEANUP_TEMP_FILES="true"

# Command for decompiling APKs/JARs.
APKTOOL_COMMAND="apktool"

# List of directories and files to completely ignore during the comparison.
# Use spaces to separate multiple entries. (e.g., IGNORE_LIST=".git .DS_Store")
IGNORE_LIST=".repack_info"

# --- Binary File Analysis ---

# Space-separated list of file extensions to IGNORE during binary analysis.
# These files will be listed as "changed" but no patch will be generated.
SKIP_BINARY_ANALYSIS_EXTENSIONS="png jpg mp3 ogg zip dat"

# The analysis methods to run on all other binary files.
# - hexdump: Full hexadecimal diff. Very thorough.
# - strings: Diffs human-readable text. Great for finding config changes.
# - readelf: Diffs library dependencies. Finds structural linking changes.
BINARY_ANALYSIS_METHODS="hexdump strings readelf"

# --- File Type Overrides ---
# A space-separated list of extensions to ALWAYS treat as text files,
# overriding the automatic detection. Useful for files like .rc or .bp
# that might be misidentified as binary.
FORCE_TEXT_EXTENSIONS="rc prop xml sh bp json"

# --- Blacklisting ---
# A space-separated list of file extensions to move from the "changed" list
# to a separate "blacklisted" report. This is for files that change but
# provide no useful diff information (e.g., compiled odex/vdex files).
BLACKLIST_EXTENSIONS="odex vdex oat art prof art"

# A space-separated list of exact filenames/paths to blacklist.
# eg: BLACKLIST_FILES="./system/priv-app/SamsungCoreServices/SamsungCoreServices.apk.gz"
BLACKLIST_FILES=""

# --- Deep Dive Analysis ---
# A space-separated list of critical directories you want a detailed,
# categorized report for. Use this to focus on the most important areas.
# Paths must start with './' (e.g., ./system/bin).
CRITICAL_DIRECTORIES="./system/apex ./system/bin ./system/etc ./system/framework ./system/lib ./system/lib64"

# --- Archive Analysis ---
# Enable/disable deep analysis of archive contents (.zip, .apex, etc.)
ANALYZE_ARCHIVES="true"
# Space-separated list of extensions to treat as archives.
# NOTE: .apk and .jar are handled separately by the APKTOOL_COMMAND.
ARCHIVE_EXTENSIONS="apex zip"

# --- APK Signature Analysis ---
# When enabled, the script will use 'apksigner' to check if a changed APK
# was re-signed by the porter (suspicious) or just officially updated by the OEM.
# This can save hours by skipping apktool analysis on hundreds of official updates.
ENABLE_APK_SIGNATURE_FILTER="true"

# --- Signature Filtering ---
# Enable filtering of files with only signature/metadata changes
FILTER_SIGNATURE_ONLY_CHANGES="true"
# Patterns to ignore (one per line, supports basic regex)
# Useful to ignore files with no changes, but only the watermak of a developer
IGNORE_SIGNATURE_PATTERNS="lj4nt8
build_id_[0-9]+
__build__
_CI_BUILD_
_metadata_"
